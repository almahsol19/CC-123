#include <iostream>
#include <termios.h>
#include <unistd.h>
#include <vector>
#include <cstdlib>
#include <ctime>

using namespace std;

const int width = 20;
const int height = 17;
bool gameOver;
int x, y, fruitX, fruitY, score;
vector<pair<int, int>> snake;
char dir;

char getch() {
    struct termios oldt, newt;
    char ch;
    tcgetattr(STDIN_FILENO, &oldt);
    newt = oldt;
    newt.c_lflag &= ~(ICANON | ECHO);
    tcsetattr(STDIN_FILENO, TCSANOW, &newt);
    ch = getchar();
    tcsetattr(STDIN_FILENO, TCSANOW, &oldt);
    return ch;
}

void Setup() {
    gameOver = false;
    dir = ' '; // Stop initially
    x = width / 2;
    y = height / 2;
    fruitX = rand() % width;
    fruitY = rand() % height;
    score = 0;
    snake.clear();
    snake.push_back({x, y});
}

void Draw() {
    system("clear");
    for (int i = 0; i < width + 2; i++) cout << "#";
    cout << endl;
    
    for (int i = 0; i < height; i++) {
        for (int j = 0; j < width; j++) {
            if (j == 0) cout << "#";
            
            if (i == y && j == x) cout << "O";
            else if (i == fruitY && j == fruitX) cout << "F";
            else {
                bool print = false;
                for (auto s : snake) {
                    if (s.first == j && s.second == i) {
                        cout << "o";
                        print = true;
                    }
                }
                if (!print) cout << " ";
            }
            
            if (j == width - 1) cout << "#";
        }
        cout << endl;
    }
    
    for (int i = 0; i < width + 2; i++) cout << "#";
    cout << "\nScore: " << score << endl;
}

void Input() {
    if (isatty(STDIN_FILENO)) {
        char key = getch();
        if (key == 'a' || key == 'A') dir = 'L';
        if (key == 'd' || key == 'D') dir = 'R';
        if (key == 'w' || key == 'W') dir = 'U';
        if (key == 's' || key == 'S') dir = 'D';
    }
}

void Logic() {
    pair<int, int> prev = snake[0], temp;
    switch (dir) {
        case 'L': x--; break;
        case 'R': x++; break;
        case 'U': y--; break;
        case 'D': y++; break;
        default: return;
    }
    
    if (x < 0 || x >= width || y < 0 || y >= height) gameOver = true;
    
    for (auto segment : snake) {
        if (segment.first == x && segment.second == y) gameOver = true;
    }
    
    snake.insert(snake.begin(), {x, y});
    if (x == fruitX && y == fruitY) {
        score += 10;
        fruitX = rand() % width;
        fruitY = rand() % height;
    } else {
        snake.pop_back();
    }
}

int main() {
    srand(time(0));
    Setup();
    while (!gameOver) {
        Draw();
        Input();
        Logic();
        usleep(100000);
    }
    cout << "Game Over!" << endl;
    return 0;
}