#include <iostream>
#include <cstdlib>
#include <ctime>
#include <unistd.h> // For sleep function

using namespace std;

const int width = 20;
const int height = 17;
int x, y, fruitX, fruitY, score;
int tailX<sup>100</sup>, tailY<sup>100</sup>;
int nTail;
enum eDirection { STOP = 0, LEFT, RIGHT, UP, DOWN };
eDirection dir;

void Setup() {
    gameover = false;
    dir = STOP;
    x = width / 2;
    y = height / 2;
    fruitX = rand() % width;
    fruitY = rand() % height;
    score = 0;
}

void Draw() {
    system("clear"); // Use "cls" on Windows
    for (int i = 0; i < width + 2; i++)
        cout << "#";
    cout << endl;

    for (int i = 0; i < height; i++) {
        for (int j = 0; j < width; j++) {
            if (j == 0)
                cout << "#";
            if (i == y && j == x)
                cout << "O"; // Snake head
            else if (i == fruitY && j == fruitX)
                cout << "F"; // Fruit
            else {
                bool print = false;
                for (int k = 0; k < nTail; k++) {
                    if (tailX[k] == j && tailY[k] == i) {
                        cout << "o"; // Snake tail
                        print = true;
                    }
                }
                if (!print)
                    cout << " ";
            }
            if (j == width - 1)
                cout << "#";
        }
        cout << endl;
    }

    for (int i = 0; i < width + 2; i++)
        cout << "#";
    cout << endl;
    cout << "Score:" << score << endl;
}

void Input() {
    // Implement input handling (e.g., using getch() or similar)
}

void Logic() {
    // Implement game logic (movement, collision detection, etc.)
}

int main() {
    Setup();
    while (!gameover) {
        Draw();
        Input();
        Logic();
        usleep(100000); // Sleep for 100 milliseconds
    }
    return 0;
}
