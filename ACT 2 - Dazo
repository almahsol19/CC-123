#include <stdio.h>

const int quizPercentage = 40;
const int assignmentPercentage = 20;
const int examPercentage = 40;
const double tolerance = 0.0001; //Tolerance for floating-point comparisons for better precision in calculating the grades

double calculateTotalQuizGrade(double totalQuizScore, double studentsTotalQuizScore) {
    if (totalQuizScore <= 0 || studentsTotalQuizScore < 0 || studentsTotalQuizScore > totalQuizScore) { //for scores validation
        printf("Invalid quiz scores.\n");
        return 0;
    }
    return (studentsTotalQuizScore / totalQuizScore) * quizPercentage;
}

double calculateTotalAssignmentGrade(double totalAssignmentScore, double studentsTotalAssignmentScore) {
    if (totalAssignmentScore <= 0 || studentsTotalAssignmentScore < 0 || studentsTotalAssignmentScore > totalAssignmentScore) { //for scores validation
        printf("Invalid assignment scores.\n");
        return 0;
    }
    return (studentsTotalAssignmentScore / totalAssignmentScore) * assignmentPercentage;
}

double calculateTotalExamGrade(double totalExamScore, double studentsTotalExamScore) {
    if (totalExamScore <= 0 || studentsTotalExamScore < 0 || studentsTotalExamScore > totalExamScore) { //for scores validation
        printf("Invalid exam scores.\n");
        return 0;
    }
    return (studentsTotalExamScore / totalExamScore) * examPercentage;
}

void equivalentFinalGrade(double totalGrade) {
    if (totalGrade >= 90 - tolerance && totalGrade <= 100 + tolerance) {
        printf("Student's Grade is %.2lf which is equivalent to A.\n", totalGrade);
    } else if (totalGrade >= 80 - tolerance && totalGrade <= 89 + tolerance) {
        printf("Student's Grade is %.2lf which is equivalent to B.\n", totalGrade);
    } else if (totalGrade >= 70 - tolerance && totalGrade <= 79 + tolerance) {
        printf("Student's Grade is %.2lf which is equivalent to C.\n", totalGrade);
    } else if (totalGrade >= 60 - tolerance && totalGrade <= 69 + tolerance) {
        printf("Student's Grade is %.2lf which is equivalent to D.\n", totalGrade);
    } else {
        printf("Student's Grade is %.2lf which is equivalent to F.\n", totalGrade);
    }
}

int main() {
    int numberOfStudents;
    double totalQuizScore, totalAssignmentScore, totalExamScore;

    // Input validation for total scores
    do {
        printf("Enter total score of the quizzes (must be positive): ");
        while(scanf("%lf", &totalQuizScore) != 1 || totalQuizScore <= 0) {
            printf("Invalid Input.\n");
            while(getchar() != '\n'); //clear input buffer
            printf("Enter total score of the quizzes (must be positive): ");
        }
    }   
    while (totalQuizScore <= 0);

    // Input validation for total scores
    do {
        printf("Enter total score of the assignments (must be positive): ");
        while(scanf("%lf", &totalAssignmentScore) != 1 || totalAssignmentScore <= 0) {
            printf("Invalid Input.\n");
            while(getchar() != '\n'); //clear input buffer
            printf("Enter total score of the assignments (must be positive): ");
        }
    } while (totalAssignmentScore <= 0);

    // Input validation for total scores
    do {
        printf("Enter total score of the exams (must be positive): ");
        while(scanf("%lf", &totalExamScore) != 1 || totalExamScore <= 0) {
            printf("Invalid Input.\n");
            while(getchar() != '\n'); //clear input buffer
            printf("Enter total score of the exams (must be positive): ");
        }
    } while (totalExamScore <= 0);

    printf("\n"); //for clearer and readable output
    
    // Input validation for total scores
    do {
        printf("Enter the number of your students (must be positive): ");
        while(scanf("%d", &numberOfStudents) != 1) {
            printf("Invalid Input.\n");
            while(getchar() != '\n'); //clear input buffer
            printf("Enter the number of your students (must be positive): ");
        }
    } while (numberOfStudents <= 0);

    printf("\n");
    for (int student = 1; student <= numberOfStudents; student++) {
        double studentsTotalQuizScore, studentsTotalAssignmentScore, studentsTotalExamScore;
        printf("Enter all the scores of the students.\n");

        // Input validation for student's scores
        do {
            printf("Enter student %d's total quiz score (non-negative and not exceeding total quiz score): ", student);
            while(scanf("%lf", &studentsTotalQuizScore) != 1 || studentsTotalQuizScore < 0 || studentsTotalQuizScore > totalQuizScore) {
                printf("Invalid student quiz score.\n");
                while(getchar() != '\n'); //clear input buffer
                printf("Enter student %d's total quiz score (non-negative and not exceeding total quiz score): ", student);
            }
        } while (studentsTotalQuizScore < 0 || studentsTotalQuizScore > totalQuizScore);
        
        // Input validation for total scores
        do {
            printf("Enter student %d's total assignment score (non-negative and not exceeding total assignment score): ", student);
            while(scanf("%lf", &studentsTotalAssignmentScore) != 1 || studentsTotalAssignmentScore < 0 || studentsTotalAssignmentScore > totalAssignmentScore) {
               printf("Invalid student assignment score.\n");
               while(getchar() != '\n'); //clear input buffer
               printf("Enter student %d's total assignment score (non-negative and not exceeding total assignment score): ", student);
            }
        } while (studentsTotalAssignmentScore < 0 || studentsTotalAssignmentScore > totalAssignmentScore);
        
        // Input validation for total scores
        do {
            printf("Enter student %d's total exam score (non-negative and not exceeding total exam score): ", student);
            while(scanf("%lf", &studentsTotalExamScore) != 1 || studentsTotalExamScore < 0 || studentsTotalExamScore > totalExamScore) {
                printf("Invalid student exam score.\n");
                while(getchar() != '\n'); //clear input buffer
                printf("Enter student %d's total exam score (non-negative and not exceeding total exam score): ", student);
            }
        } while (studentsTotalExamScore < 0 || studentsTotalExamScore > totalExamScore);

        double quiz = calculateTotalQuiz(totalQuizScore, studentsTotalQuizScore);
        double assignment = calculateTotalAssignment(totalAssignmentScore, studentsTotalAssignmentScore);
        double exam = calculateTotalExam(totalExamScore, studentsTotalExamScore);
        double totalGrade = quiz + assignment + exam;
        equivalentGrade(totalGrade);
        printf("\n"); //for more clearer output
    }
    
    return 0;
}
